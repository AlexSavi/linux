/*
 * Copyright 2016 Digi International, Inc.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

/dts-v1/;
#include <dt-bindings/input/input.h>
#include <dt-bindings/interrupt-controller/irq.h>
/* i.MX6 UltraLite CPU */
#include "imx6ul.dtsi"
/* ConnectCore 6UL (wireless/bluetooth variant) */
#include "imx6ul-ccimx6ul-wb.dtsi"
/* ConnectCore 6UL SBC */
#include "imx6ul-ccimx6ulsbc.dtsi"

&caam_keyblob {
	status = "okay";
};

/* ECSPI1 */
&ecspi1 {
	/*
	 * There are no SPI slave devices on the SBC.
	 * Enable if adding your slave devices below.
	 */
	//status = "okay";

	/* Add your slave devices here. Next is an example of spidev. */
	//spidev@0 {
	//	reg = <0>;
	//	compatible = "spidev";
	//	spi-max-frequency = <1000000>;
	//};
};

/* ENET1 */
&fec1 {
	status = "okay";
};

/* ENET2 */
&fec2 {
	status = "okay";
};

/* CAN1 (multiplexed with UART3) */
//&flexcan1 {
//	status = "okay";
//};

/* CAN2 */
&flexcan2 {
	status = "okay";
};

/* UART3 (multiplexed with CAN1) */
&uart3 {
	status = "okay";
};

/* UART5 (Console) */
&uart5 {
	status = "okay";
};

&usbotg1 {
	status = "okay";
};

&usbotg2 {
	status = "okay";
};

/* USDHC2 (microSD, conflicts with eMMC) */
&usdhc2 {
	pinctrl-assert-gpios = <&gpio5 1 GPIO_ACTIVE_LOW>;
	broken-cd;	/* no carrier detect line (use polling) */
	status = "okay";
};

/* USDHC2 (eMMC, conflicts with microSD) */
//&usdhc2 {
//	pinctrl-assert-gpios = <&gpio5 1 GPIO_ACTIVE_HIGH>;
//	non-removable;
//	/*
//	 * Comment these two lines for 4-bit data bus or leave uncommented
//	 * for 8-bit data bus
//	 */
//	pinctrl-0 = <&pinctrl_usdhc2_8databits>;
//	bus-width = <8>;
//
//	status = "okay";
//};
